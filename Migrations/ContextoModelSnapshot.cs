// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VistoriaDeVeiculos.DataContext;

namespace VistoriaDeVeiculos.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VistoriaDeVeiculos.Models.Entities.FormularioDeInspecao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("FormularioDeInspecao");
                });

            modelBuilder.Entity("VistoriaDeVeiculos.Models.Entities.Motorista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnName("Categoria")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cnh")
                        .IsRequired()
                        .HasColumnName("CNH")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("FormularioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId")
                        .IsUnique();

                    b.ToTable("Motorista");
                });

            modelBuilder.Entity("VistoriaDeVeiculos.Models.Entities.Pergunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnName("Descricao")
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("FormularioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoDeResposta")
                        .IsRequired()
                        .HasColumnName("Resposta")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("Titulo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId");

                    b.ToTable("Pergunta");
                });

            modelBuilder.Entity("VistoriaDeVeiculos.Models.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("FormularioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnName("Placa")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UltimaRevisao")
                        .IsRequired()
                        .HasColumnName("UltimaRevisao")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId")
                        .IsUnique();

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("VistoriaDeVeiculos.Models.Entities.FormularioDeInspecao", b =>
                {
                    b.OwnsOne("VistoriaDeVeiculos.Models.Entities.DadosDoFormulario", "DadosDoFormulario", b1 =>
                        {
                            b1.Property<Guid>("FormularioDeInspecaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("DataDaInspecao")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("NumeroDoFormulario")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Obra")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PeriodicaSemanal")
                                .IsRequired()
                                .HasColumnName("PeriodicalSemanal")
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("TipoDeTransferencia")
                                .IsRequired()
                                .HasColumnName("TipoDeTranferencia")
                                .HasColumnType("varchar(50)");

                            b1.HasKey("FormularioDeInspecaoId");

                            b1.ToTable("FormularioDeInspecao");

                            b1.WithOwner()
                                .HasForeignKey("FormularioDeInspecaoId");
                        });
                });

            modelBuilder.Entity("VistoriaDeVeiculos.Models.Entities.Motorista", b =>
                {
                    b.HasOne("VistoriaDeVeiculos.Models.Entities.FormularioDeInspecao", "FormularioDeInspecao")
                        .WithOne("DadosDoMotorista")
                        .HasForeignKey("VistoriaDeVeiculos.Models.Entities.Motorista", "FormularioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VistoriaDeVeiculos.Models.Entities.Pergunta", b =>
                {
                    b.HasOne("VistoriaDeVeiculos.Models.Entities.FormularioDeInspecao", "FormularioDeInspecao")
                        .WithMany("Perguntas")
                        .HasForeignKey("FormularioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VistoriaDeVeiculos.Models.Entities.Veiculo", b =>
                {
                    b.HasOne("VistoriaDeVeiculos.Models.Entities.FormularioDeInspecao", "FormularioDeInspecao")
                        .WithOne("DadosDoVeiculo")
                        .HasForeignKey("VistoriaDeVeiculos.Models.Entities.Veiculo", "FormularioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
